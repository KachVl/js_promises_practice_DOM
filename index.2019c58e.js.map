{"mappings":"ACGA,IAAM,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAK,gBAAgB,CAAC,cAAe,SAAC,CAAtC,EACE,EAAE,cAAc,EAClB,GAEA,IAAM,EAAqB,SAAC,CAAA,CAAM,CAAlC,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,QAAS,gBACnC,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,WAAW,CAAG,EAEvB,AAAS,UAAT,EACF,EAAa,SAAS,CAAC,GAAG,CAAC,SAE3B,EAAa,SAAS,CAAC,GAAG,CAAC,WAG7B,EAAK,MAAM,CAAC,EACd,EAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,IAAM,EAAQ,WAAW,WAAM,OAAA,GAAU,EAAA,KAEzC,EAAK,gBAAgB,CAAC,QAAS,WAC7B,aAAa,GACb,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,GACF,GAEA,EAAK,gBAAgB,CAAC,cAAe,WACnC,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,IAAI,EAAgB,CAAA,EAChB,EAAiB,CAAA,EAErB,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAgB,CAAA,EAEZ,AAAiB,GACnB,GAEJ,GAEA,EAAK,gBAAgB,CAAC,cAAe,WACnC,EAAiB,CAAA,EAEb,GAAiB,GACnB,GAEJ,EACF,GAEA,EACG,IAAI,CAAC,WACJ,EAAmB,6BAA8B,UACnD,GACC,KAAK,CAAC,WAAM,OAAA,EAAmB,6BAA8B,Q,GAEhE,EAAS,IAAI,CAAC,WACZ,EAAmB,8BAA+B,UACpD,GAEA,EAAS,IAAI,CAAC,WACZ,EAAmB,6BAA8B,UACnD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable prefer-promise-reject-errors */ \"use strict\";\nvar page = document.querySelector(\"body\");\npage.addEventListener(\"contextmenu\", function(e) {\n    e.preventDefault();\n});\nvar createNotification = function(text, type) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"class\", \"notification\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.textContent = text;\n    if (type === \"error\") notification.classList.add(\"error\");\n    else notification.classList.add(\"success\");\n    page.append(notification);\n};\nvar promise1 = new Promise(function(resolve, reject) {\n    var timer = setTimeout(function() {\n        return reject();\n    }, 3000);\n    page.addEventListener(\"click\", function() {\n        clearTimeout(timer);\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    page.addEventListener(\"click\", function() {\n        resolve();\n    });\n    page.addEventListener(\"contextmenu\", function() {\n        resolve();\n    });\n});\nvar promise3 = new Promise(function(resolve, reject) {\n    var isLeftClicked = false;\n    var isRightClicked = false;\n    page.addEventListener(\"click\", function() {\n        isLeftClicked = true;\n        if (isLeftClicked && isRightClicked) resolve();\n    });\n    page.addEventListener(\"contextmenu\", function() {\n        isRightClicked = true;\n        if (isLeftClicked && isRightClicked) resolve();\n    });\n});\npromise1.then(function() {\n    createNotification(\"First promise was resolved\", \"success\");\n}).catch(function() {\n    return createNotification(\"First promise was rejected\", \"error\");\n});\npromise2.then(function() {\n    createNotification(\"Second promise was resolved\", \"success\");\n});\npromise3.then(function() {\n    createNotification(\"Third promise was resolved\", \"success\");\n});\n\n//# sourceMappingURL=index.2019c58e.js.map\n","/* eslint-disable prefer-promise-reject-errors */\n'use strict';\n\nconst page = document.querySelector('body');\n\npage.addEventListener('contextmenu', (e) => {\n  e.preventDefault();\n});\n\nconst createNotification = (text, type) => {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('class', 'notification');\n  notification.setAttribute('data-qa', 'notification');\n  notification.textContent = text;\n\n  if (type === 'error') {\n    notification.classList.add('error');\n  } else {\n    notification.classList.add('success');\n  }\n\n  page.append(notification);\n};\n\nconst promise1 = new Promise((resolve, reject) => {\n  const timer = setTimeout(() => reject(), 3000);\n\n  page.addEventListener('click', () => {\n    clearTimeout(timer);\n    resolve();\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  page.addEventListener('click', () => {\n    resolve();\n  });\n\n  page.addEventListener('contextmenu', () => {\n    resolve();\n  });\n});\n\nconst promise3 = new Promise((resolve, reject) => {\n  let isLeftClicked = false;\n  let isRightClicked = false;\n\n  page.addEventListener('click', () => {\n    isLeftClicked = true;\n\n    if (isLeftClicked && isRightClicked) {\n      resolve();\n    }\n  });\n\n  page.addEventListener('contextmenu', () => {\n    isRightClicked = true;\n\n    if (isLeftClicked && isRightClicked) {\n      resolve();\n    }\n  });\n});\n\npromise1\n  .then(() => {\n    createNotification('First promise was resolved', 'success');\n  })\n  .catch(() => createNotification('First promise was rejected', 'error'));\n\npromise2.then(() => {\n  createNotification('Second promise was resolved', 'success');\n});\n\npromise3.then(() => {\n  createNotification('Third promise was resolved', 'success');\n});\n"],"names":["page","document","querySelector","addEventListener","e","preventDefault","createNotification","text","type","notification","createElement","setAttribute","textContent","classList","add","append","promise1","Promise","resolve","reject","timer","setTimeout","clearTimeout","promise2","promise3","isLeftClicked","isRightClicked","then","catch"],"version":3,"file":"index.2019c58e.js.map"}